{
	"info": {
		"_postman_id": "a12b4b69-8f9c-4936-9cc7-a1eb15df8cc5",
		"name": "Go E-commerce API",
		"description": "A collection of API endpoints for the Go E-commerce application.\n\nImportant:  \nLogin through Login Merchant to test merchant endpoints\n\nLogin through Login Customer to test customer endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3952413"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Register Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Customer\",\n    \"email\": \"customer@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						},
						"description": "Registers a new user. The role can be 'customer' or 'merchant'."
					},
					"response": []
				},
				{
					"name": "Login Merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
									"    console.log(\"JWT Token set.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"merchant@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						},
						"description": "Logs in a user and returns a JWT token. The token is automatically saved to the `jwt_token` collection variable."
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "List All Products (Customer)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/?merchant_name=Test Merchant&name=Product&min_price=10&max_price=100000&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							],
							"query": [
								{
									"key": "merchant_name",
									"value": "Test Merchant",
									"description": "Filter by merchant name (partial match)"
								},
								{
									"key": "name",
									"value": "Product",
									"description": "Filter by product name (partial match)"
								},
								{
									"key": "min_price",
									"value": "10",
									"description": "Filter by minimum price"
								},
								{
									"key": "max_price",
									"value": "100000",
									"description": "Filter by maximum price"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all products with filtering and pagination. Requires 'customer' role."
					},
					"response": []
				},
				{
					"name": "Get Product By ID (Customer)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"1"
							]
						},
						"description": "Retrieves a single product by its ID. Requires 'customer' role."
					},
					"response": []
				}
			]
		},
		{
			"name": "Products (Merchant)",
			"item": [
				{
					"name": "Create Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Awesome Product\",\n    \"description\": \"This is a really cool product.\",\n    \"price\": 10000,\n    \"quantity\": 100\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/product/merchant/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								"merchant",
								""
							]
						},
						"description": "Creates a new product for the logged-in merchant. Requires 'merchant' role."
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Awesome Product11\",\n    \"price\": 110000,\n    \"quantity\": 90\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/product/merchant/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								"merchant",
								"1"
							]
						},
						"description": "Updates an existing product. Requires 'merchant' role."
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/product/merchant/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								"merchant",
								"1"
							]
						},
						"description": "Deletes a product by its ID. Requires 'merchant' role."
					},
					"response": []
				},
				{
					"name": "List Merchant's Products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/product/merchant?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								"merchant"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Lists all products belonging to the logged-in merchant. Requires 'merchant' role."
					},
					"response": []
				},
				{
					"name": "Get Merchant's Product By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/product/merchant/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								"merchant",
								"1"
							]
						},
						"description": "Retrieves a single product by its ID. Requires 'merchant' role."
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions (Customer)",
			"item": [
				{
					"name": "Create Transaction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_id\": 1,\n    \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/transactions/customer/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"customer",
								""
							]
						},
						"description": "Creates a new transaction (purchase a product). Requires 'customer' role."
					},
					"response": []
				},
				{
					"name": "List Customer's Transactions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/transactions/customer?limit=10&page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"customer"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "Lists all transactions for the logged-in customer. The customer_id in the path is currently ignored and the ID from the JWT is used. Requires 'customer' role. The `user_id` variable is set on login."
					},
					"response": []
				},
				{
					"name": "Get Transaction By ID (Customer)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/transactions/customer/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"customer",
								"1"
							]
						},
						"description": "Retrieves a single transaction by its ID. Requires 'customer' role."
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions (Merchant)",
			"item": [
				{
					"name": "List Merchant's Transactions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/transactions/merchant?limit=10&page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"merchant"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "Lists all transactions for the logged-in merchant's products. The merchant_id in the path is currently ignored and the ID from the JWT is used. Requires 'merchant' role. The `user_id` variable is set on login."
					},
					"response": []
				},
				{
					"name": "Get Transaction By ID (Merchant)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/transactions/merchant/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"merchant",
								"1"
							]
						},
						"description": "Retrieves a single transaction by its ID. Requires 'merchant' role."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "jwt_token",
			"value": "",
			"description": {
				"content": "This token is automatically set after a successful login.",
				"type": "text/plain"
			}
		},
		{
			"key": "user_id",
			"value": "",
			"description": {
				"content": "This user ID is automatically set after a successful login.",
				"type": "text/plain"
			}
		}
	]
}